{"version":3,"sources":["context/projects/projectContext.js","context/projects/projectReducer.js","types/index.js","config/axios.js","context/projects/ProjectState.js","context/tasks/taskContext.js","context/tasks/taskReducer.js","context/tasks/taskState.js","context/alert/alertReducer.js","context/alert/alertContext.js","context/alert/alertState.js","context/auth/authContext.js","context/auth/authReducer.js","config/token.js","context/auth/authState.js","components/routes/PrivateRoute.js","components/auth/Login.js","components/auth/SignUp.js","components/projects/FrmProject.js","components/projects/Project.js","components/projects/ListProjects.js","components/layout/Sidebar.js","components/layout/Header.js","components/tasks/FrmTask.js","components/tasks/Task.js","components/tasks/ListTasks.js","components/projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["projectContext","createContext","state","action","type","showProjectForm","projects","payload","showProjectError","project","filter","_id","message","axiosClient","axios","create","baseURL","process","ProjectState","props","useReducer","projectReducer","dispatch","getProjectsFn","a","get","res","data","msg","category","addProjectFn","post","console","log","deleteProjectFn","projectId","delete","Provider","value","showProjectFormFn","showProjectErrorFn","setCurrentProjectFn","children","taskContext","projectTasks","errorTask","task","map","currentTask","TaskState","TaskReducer","getProjectTasksFn","params","tasks","addTaskFn","updateTaskFn","put","deleteTaskFn","taskId","showTaskErrorFn","setCurrentTaskFn","cleanCurrentTaskFn","alert","alertContext","AlertState","alertReducer","showAlertFn","setTimeout","authContext","localStorage","setItem","token","logged","loading","user","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","signUpFn","userData","getLoggedUserFn","response","logInFn","logOutFn","PrivateRoute","Component","component","useContext","AuthContext","useEffect","render","to","Login","AlertContext","history","push","useState","email","password","setUser","handleChange","e","target","name","className","onSubmit","preventDefault","trim","htmlFor","id","placeholder","onChange","SignUp","username","passwordconfirm","length","FrmProject","frmProjectContext","frmProjectData","setFrmProjectData","onClick","Project","projectsContext","tasksContext","ListProjects","TransitionGroup","CSSTransition","key","timeout","classNames","Sidebar","Header","FrmTask","formData","setFormData","currentProject","status","Task","completed","handleClickChangeStatus","handleClickSelectTask","ListTasks","proyectsContext","proyectContext","Projects","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.89485c9f.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst projectContext = createContext();\n\nexport default projectContext;","import { \n    FORM_PROJECT, GET_PROJECTS, ADD_PROJECT, ERROR_PROJECT,\n    FORM_VALIDATE, CURRENT_PROJECT, DELETE_PROJECT \n} from '../../types';\nexport default (state, action) => {\n    switch(action.type){\n        case FORM_PROJECT:\n            return {\n                ...state,\n                showProjectForm: true\n            }\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            }\n        case ADD_PROJECT:\n            return {\n                ...state,\n                projects: [...state.projects, action.payload],\n                showProjectForm: false,\n                showProjectError: false,\n            }\n        case FORM_VALIDATE:\n            return {\n                ...state,\n                showProjectError: true\n            }\n        case CURRENT_PROJECT:\n            return {\n                ...state,\n                project: state.projects.filter(project => project._id === action.payload)\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(project => project._id !== action.payload),\n                project: null\n            }\n        case ERROR_PROJECT:\n            return {\n                ...state,\n                message: action.payload\n            }\n        default: \n            return state;\n    }\n}","export const FORM_PROJECT = 'FORM_PROJECT';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const FORM_VALIDATE = 'FORM_VALIDATE';\nexport const CURRENT_PROJECT = 'CURRENT_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\nexport const ERROR_PROJECT = 'ERROR_PROJECT';\n\nexport const GET_PROJECT_TASKS = 'GET_PROJECT_TASKS';\nexport const ADD_TASK = 'ADD_TASK';\nexport const FORM_TASK_VALIDATE = 'FORM_TASK_VALIDATE';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const TASK_STATUS = 'TASK_STATUS';\nexport const CURRENT_TASK = 'CURRENT_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const CLEAN_CURRENT_TASK = 'CLEAN_CURRENT_TASK';\n\nexport const SHOW_ALERT = 'SHOW_ALERT';\nexport const HIDE_ALERT = 'HIDE_ALERT';\n\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\nexport const GET_USER = 'GET_USER';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\n\nconst axiosClient = axios.create({\n    baseURL: process.env.REACT_APP_SERVER_URL,\n});\n\nexport default axiosClient;","import React, { useReducer } from 'react';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport {    FORM_PROJECT, GET_PROJECTS, ADD_PROJECT, ERROR_PROJECT,\n            FORM_VALIDATE, CURRENT_PROJECT, DELETE_PROJECT \n} from '../../types';\nimport axiosClient from '../../config/axios';\n\nconst ProjectState = props => {\n\n    const initialState =  {\n        projects: [],\n        project: null,\n        showProjectForm: false,\n        showProjectError: false,\n        message: null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(projectReducer, initialState);\n\n    //Funciones para el CRUD\n    const showProjectFormFn = () => {\n        dispatch({\n            type: FORM_PROJECT            \n        })\n    }\n\n    const getProjectsFn = async () => {\n        try {\n            const res = await axiosClient.get('/api/projects')\n            dispatch({\n                type: GET_PROJECTS,\n                payload: res.data.projects\n            });\n        } catch (error) {\n            const alert = {\n                msg: 'Error de Servidor',\n                category: 'alerta-error'\n            }\n            dispatch({\n                type: ERROR_PROJECT,\n                payload: alert\n            });\n        }        \n    }\n\n    const addProjectFn = async project => { \n        try {\n            const res = await axiosClient.post('/api/projects', project);\n            console.log(res);\n            dispatch({\n                type: ADD_PROJECT,\n                    payload: res.data\n            });\n            \n        } catch (error) {\n            const alert = {\n                msg: 'Error de Servidor',\n                category: 'alerta-error'\n            }\n            dispatch({\n                type: ERROR_PROJECT,\n                payload: alert\n            });\n        }      \n        \n\n    }\n\n    const showProjectErrorFn = () => {\n        dispatch({\n            type: FORM_VALIDATE\n        })\n    }\n\n    const setCurrentProjectFn = projectId => {\n        dispatch({\n            type: CURRENT_PROJECT,\n            payload: projectId\n        })\n    }\n\n    const deleteProjectFn = async projectId => {\n        try {\n            await axiosClient.delete(`/api/projects/${projectId}`);\n            dispatch({\n                type: DELETE_PROJECT,\n                payload: projectId\n            });\n        } catch (error) {\n            const alert = {\n                msg: 'Error de Servidor',\n                category: 'alerta-error'\n            }\n            dispatch({\n                type: ERROR_PROJECT,\n                payload: alert\n            });\n        }        \n    }\n\n    return(\n        <projectContext.Provider\n            value={{\n                projects: state.projects,\n                project: state.project,\n                showProjectForm: state.showProjectForm,\n                showProjectError: state.showProjectError,\n                message: state.message,\n                showProjectFormFn,\n                showProjectErrorFn,\n                getProjectsFn,\n                addProjectFn,\n                setCurrentProjectFn,\n                deleteProjectFn\n            }}\n        >\n            {props.children}\n        </projectContext.Provider>\n    )\n}\n\nexport default ProjectState;\n","import { createContext } from 'react';\n\nconst taskContext = createContext();\n\nexport default taskContext;","import {\n    GET_PROJECT_TASKS, ADD_TASK, DELETE_TASK, FORM_TASK_VALIDATE,\n    CURRENT_TASK, UPDATE_TASK, CLEAN_CURRENT_TASK\n} from '../../types/index';\n\nexport default (state, action) => {\n    switch(action.type){\n        case GET_PROJECT_TASKS:\n            return {\n                ...state,\n                projectTasks: action.payload\n            }\n        case ADD_TASK:\n            return {\n                ...state,\n                projectTasks: [...state.projectTasks, action.payload],\n                errorTask: false,\n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                projectTasks: state.projectTasks.filter(task => task._id !== action.payload)\n            }\n\n        case FORM_TASK_VALIDATE:\n            return {\n                ...state,\n                errorTask: true,\n            }        \n\n        case UPDATE_TASK:\n            return {\n                ...state,\n                projectTasks: state.projectTasks.map(task => task._id === action.payload._id ? action.payload : task) \n            }\n\n        case CURRENT_TASK:\n            return {\n                ...state,\n                currentTask: action.payload\n            }         \n        case CLEAN_CURRENT_TASK:\n            return {\n                ...state,\n                currentTask: null,\n            }\n            \n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport axiosClient from '../../config/axios';\n\nimport {\n    GET_PROJECT_TASKS, ADD_TASK, FORM_TASK_VALIDATE, DELETE_TASK,\n    CURRENT_TASK,\n    UPDATE_TASK,\n    CLEAN_CURRENT_TASK\n} from '../../types/index';\n\nconst TaskState = props => {\n    \n    const initialState = {\n        projectTasks: [], \n        errorTask: false,\n        currentTask: null  \n    }\n    \n    const [state, dispatch] = useReducer(TaskReducer, initialState);\n    \n    const getProjectTasksFn = async project => {\n        try {\n            const res = await axiosClient.get('/api/tasks', { params: { project }});\n            dispatch({\n                type: GET_PROJECT_TASKS,\n                payload: res.data.tasks\n            });          \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const addTaskFn = async task => {\n        try {\n            await axiosClient.post('/api/tasks', task);\n            dispatch({\n                type: ADD_TASK,\n                payload: task\n            });    \n        } catch (error) {\n            console.log(error);\n        }        \n    }\n\n    const updateTaskFn = async task => {\n        try {\n            const res = await axiosClient.put(`/api/tasks/${task._id}`, task);\n            dispatch({\n                type: UPDATE_TASK,\n                payload: res.data.task\n            });  \n        } catch (error) {\n            console.log(error);            \n        }        \n    }\n\n    const deleteTaskFn = async (taskId, project) => {\n        try {\n            await axiosClient.delete(`/api/tasks/${taskId}`, { params: { project }});\n            dispatch({\n            type: DELETE_TASK,\n            payload: taskId\n            });  \n        } catch (error) {\n            console.log(error);            \n        }        \n    }\n\n    const showTaskErrorFn = () => {\n        dispatch({\n            type: FORM_TASK_VALIDATE\n        });\n    }\n\n    const setCurrentTaskFn = task => {\n        dispatch({\n            type: CURRENT_TASK,\n            payload: task\n        });\n    }\n\n    const cleanCurrentTaskFn = () => {\n        dispatch({\n            type: CLEAN_CURRENT_TASK\n        })\n    }\n\n    return(\n    <TaskContext.Provider\n        value={{\n            projectTasks: state.projectTasks,\n            errorTask: state.errorTask,\n            currentTask: state.currentTask,\n            getProjectTasksFn,\n            addTaskFn,\n            deleteTaskFn,\n            updateTaskFn,\n            showTaskErrorFn,\n            setCurrentTaskFn,\n            cleanCurrentTaskFn            \n        }}\n    >\n        {props.children}\n    </TaskContext.Provider>\n\n    );\n}\n\nexport default TaskState;","import { SHOW_ALERT, HIDE_ALERT } from '../../types';\n\nexport default (state, action) => {\n    switch(action.type){\n        case SHOW_ALERT:\n            return {\n                alert: action.payload\n            }\n        case HIDE_ALERT:\n            return {\n                alert: null\n            } \n        default:\n            return state;\n    }\n}","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;","import React, { useReducer } from 'react';\nimport alertReducer from './alertReducer';\nimport alertContext from './alertContext';\n\nimport { SHOW_ALERT, HIDE_ALERT } from '../../types';\n\nconst AlertState = props => {\n    const initialState = {\n        alert: null,\n    }\n    const [ state, dispatch ] = useReducer(alertReducer, initialState);\n\n    const showAlertFn = (msg, category) => {\n        dispatch({\n            type: SHOW_ALERT,\n            payload: {\n                msg,\n                category\n            }\n        });\n\n        setTimeout(() => {\n            dispatch({\n                type: HIDE_ALERT\n            });\n        }, 5000);\n    } \n\n    return (\n        <alertContext.Provider\n            value={{\n                alert: state.alert,\n                showAlertFn\n            }}\n        >\n            {props.children}\n        </alertContext.Provider>\n    )\n\n\n}\n\nexport default AlertState;\n","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import { SIGNUP_SUCCESS, SIGNUP_ERROR, GET_USER, LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT } from '../../types';\n\nexport default (state, action) => {\n    switch(action.type){\n        case SIGNUP_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('mern_projects_token', action.payload.token);\n            return {\n                ...state,\n                logged: true,\n                message: null,\n                loading: false\n            }\n        case GET_USER:\n            return {\n                ...state,\n                logged: true,\n                user: action.payload,\n                loading: false\n            }\n        case LOGIN_ERROR:\n        case SIGNUP_ERROR:\n        case LOGOUT:\n            localStorage.removeItem('mern_projects_token');\n            return {\n                ...state,\n                token: null,\n                user: null,\n                logged: null,\n                message: action.payload,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import axiosClient from './axios';\n\nconst tokenAuth = token => {\n    if(token){\n        axiosClient.defaults.headers.common['x-auth-token'] = token;\n    }else{\n        delete axiosClient.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport { SIGNUP_SUCCESS, SIGNUP_ERROR, GET_USER, LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT } from '../../types';\nimport axiosClient from '../../config/axios';\nimport tokenAuth from '../../config/token';\n\nconst AuthState = props => {\n\n    const initialState = {\n        token: localStorage.getItem('mern_projects_token'),\n        logged: null,\n        loading: true,\n        user: null,\n        message: null\n    };\n    const [ state, dispatch] = useReducer(AuthReducer, initialState);\n\n    const signUpFn = async userData => {\n        try {\n            const res = await axiosClient.post('/api/users', userData);\n            dispatch({\n                type: SIGNUP_SUCCESS,\n                payload: res.data\n            });\n            getLoggedUserFn();\n            \n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type: SIGNUP_ERROR,\n                payload: alert\n            });\n        }\n    }\n\n    const getLoggedUserFn = async () => {\n        const token = localStorage.getItem('mern_projects_token');\n        if(token){\n            tokenAuth(token);\n        }\n        try {\n            const res = await axiosClient.get('/api/auth');\n            dispatch({\n                type: GET_USER,\n                payload: res.data.user\n            });\n        } catch (error) {\n            console.log(error);\n            dispatch({\n                type: LOGIN_ERROR\n            });\n        }\n    }\n\n    const logInFn = async data => {\n        try {\n            const res = await axiosClient.post('/api/auth', data);\n            console.log(res);\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            });\n            getLoggedUserFn();\n            \n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alert\n            });        \n        }\n    }\n\n    const logOutFn = () => {\n        dispatch({\n            type: LOGOUT\n        })\n    }\n\n    return(\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                logged: state.logged,\n                loading: state.loading,\n                user: state.user,\n                message: state.message,\n                signUpFn,\n                logInFn,\n                getLoggedUserFn,\n                logOutFn\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({ component: Component, ...props }) => {\n\n    const authContext = useContext(AuthContext);\n    const { logged, loading, getLoggedUserFn } = authContext;\n    \n    useEffect(() => {\n        getLoggedUserFn();\n        // eslint-disable-next-line\n    }, [getLoggedUserFn]);\n    \n    return ( \n        <Route {...props} render={ props => !logged  && !loading ? (\n            <Redirect to=\"/\" />\n        ):(\n            <Component {...props} />\n        )} />\n     );\n}\n \nexport default PrivateRoute;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Login = (props) => {\n\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlertFn } = alertContext;\n\n    const authContext = useContext(AuthContext);\n    const { message, logged, logInFn } = authContext;\n\n    // Inicio de sesión inválido\n    useEffect(() => {        \n        if(logged){\n            props.history.push('/projects');\n        }\n        if(message){\n            showAlertFn(message.msg, message.category);\n        }\n        // eslint-disable-next-line\n    }, [message, logged, props.history])\n\n\n    const [user, setUser] = useState({\n        email: '',\n        password: ''\n    })\n\n    const { email, password } = user;\n\n    const handleChange =  e => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if(email.trim() === '' || password.trim() === ''){\n            showAlertFn('Todos los campos son obligatorios', 'alerta-error');\n        }\n        logInFn({ email, password });\n    }\n\n    return ( \n        <div className=\"form-usuario\">\n            {alert ? (\n                <div className={`alerta ${alert.category}`}>{ alert.msg }</div>\n            ) : null }\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesión</h1>\n                <form onSubmit={handleSubmit} >                \n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">\n                            Email\n                        </label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            onChange={handleChange}\n                            value={email}\n                        />    \n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">\n                            Password\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            onChange={handleChange}\n                            value={password}\n                        />    \n                    </div> \n\n                    <div className=\"campo-form\">\n                        <input \n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Iniciar Sesión\"\n                        />\n                    </div>\n                </form> \n\n                <Link\n                    to={'/signup'} className=\"enlace-cuenta\"\n                >Crear una cuenta</Link>             \n\n            </div>\n        </div>\n     );\n}\n \nexport default Login;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst SignUp = (props) => {\n\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlertFn } = alertContext;\n\n    const authContext = useContext(AuthContext);\n    const { message, logged, signUpFn } = authContext;\n\n    /*\n    Utilizo el useEffect en casos que:\n    -- El usuario se haya autenticado\n    -- El usuario se haya registrado\n    -- El usuario se quiera registrar y sea un registro duplicado\n    */\n    useEffect(() => {\n        if(logged){\n            props.history.push('/projects');\n        }\n        if(message){\n            showAlertFn(message.msg, message.category);\n        }\n        // eslint-disable-next-line\n    }, [message, logged, props.history])\n\n    const [user, setUser] = useState({\n        username: '',\n        email: '',\n        password: '',\n        passwordconfirm: ''\n\n    });\n\n    const { username, email, password, passwordconfirm } = user;\n\n    const handleChange =  e => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        //Validación que no se ingresen campos vacíos\n        if(\n            username.trim() === '' || \n            email.trim === '' || \n            password.trim() === '' || \n            passwordconfirm.trim() === '' ) {\n                showAlertFn('Todos los campos son obligatorios', 'alerta-error');\n                return;\n        }\n\n        //Password mínimo de 6 caracteres\n        if(password.length < 6){\n            showAlertFn('La contraseña debe tener 6 caracteres como mínimo', 'alerta-error');\n            return;\n        }\n\n        //Los dos passwords deben ser iguales\n        if(password !== passwordconfirm){\n            showAlertFn('Las contraseñas no coinciden', 'alerta-error');           \n            return;          \n        }\n\n        //Registrar el State\n        signUpFn({\n            name: username,\n            email,\n            password\n        });\n\n    }\n\n    return ( \n        <div className=\"form-usuario\">\n            {alert ? (\n                <div className={`alerta ${alert.category}`}>{ alert.msg }</div>\n            ) : null }\n            <div className=\"contenedor-form sombra-dark\">                \n                <h1>Crea tu cuenta</h1>\n                <form  onSubmit={handleSubmit} >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"username\">\n                            Tu Nombre\n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            name=\"username\"\n                            placeholder=\"Tu Nombre\"\n                            onChange={handleChange}\n                            value={username}\n                        />    \n                    </div>\n                    \n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">\n                            Email\n                        </label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            onChange={handleChange}\n                            value={email}\n                        />    \n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">\n                            Password\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            onChange={handleChange}\n                            value={password}\n                        />    \n                    </div> \n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"passwordconfirm\">\n                            Confirma tu Password\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"passwordconfirm\"\n                            name=\"passwordconfirm\"\n                            placeholder=\"Repite tu password\"\n                            onChange={handleChange}\n                            value={passwordconfirm}\n                        />    \n                    </div> \n\n                    <div className=\"campo-form\">\n                        <input \n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Registrarme\"\n                        />\n                    </div> \n                </form>\n\n                <Link\n                    to={'/'} className=\"enlace-cuenta\"\n                >¿Ya tienes cuenta? Inicia Sesión</Link>             \n\n            </div>\n        </div>\n     );\n}\n \nexport default SignUp;","import React, { Fragment, useState, useContext } from 'react';\nimport projectContext from '../../context/projects/projectContext';\n\nconst FrmProject = () => {\n\n    //Obtener el context\n    const frmProjectContext = useContext(projectContext);\n    const { showProjectForm, showProjectError, \n        showProjectFormFn, addProjectFn, showProjectErrorFn         \n    } = frmProjectContext;\n\n    const [frmProjectData, setFrmProjectData] = useState({\n        name: ''\n    });\n\n    const { name } = frmProjectData;\n\n    const handleChange = e => {\n        setFrmProjectData({\n            ...frmProjectData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        //Validaciones del formulario\n        if(name === ''){\n            showProjectErrorFn();\n            return;\n        }\n\n        //Agregar al State\n        addProjectFn(frmProjectData);\n\n        //Limpiar el formulario\n        setFrmProjectData({\n            name: ''\n        })\n\n    }\n\n    const handleClick = e => {\n        showProjectFormFn();\n    }\n\n    return ( \n        <Fragment>\n            \n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={handleClick}\n            >Nuevo Proyecto</button>\n\n            {showProjectForm ? (\n                <form\n                    className=\"formulario-nuevo-proyecto\" \n                    onSubmit={handleSubmit}               \n                >\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre del Proyecto\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                    /> \n\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-block\"\n                        value=\"Agregar Proyecto\"\n                    />                    \n\n                </form>\n            )\n            : null\n            }\n            { showProjectError ? <p className=\"mensaje error\">El nombre del proyecto es obligatorio</p> : null }\n\n\n        </Fragment>\n     );\n}\n \nexport default FrmProject;","import React, { useContext } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst Project = ({project}) => {\n\n    const projectsContext = useContext(projectContext);\n    const tasksContext = useContext(taskContext);\n\n    const { setCurrentProjectFn } = projectsContext;\n    const { getProjectTasksFn } = tasksContext;\n\n    const handleClick = projectId => {\n        setCurrentProjectFn(projectId);\n        getProjectTasksFn(projectId);\n    }\n\n    return ( \n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={() => handleClick(project._id)}\n            >{project.name}</button>\n        </li>\n    );\n}\n \nexport default Project;","import React, { useContext, useEffect } from 'react';\nimport Project from './Project';\nimport projectContext from '../../context/projects/projectContext';\nimport AlertContext from '../../context/alert/alertContext';\nimport { TransitionGroup, CSSTransition} from 'react-transition-group';\n\nconst ListProjects = () => {\n\n    const projectsContext = useContext(projectContext);\n    const { projects, message,  getProjectsFn } = projectsContext;\n\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlertFn } = alertContext;\n\n    useEffect(() => {\n        if(message){\n            showAlertFn(message.msg, message.category);\n        }\n        getProjectsFn();\n        // eslint-disable-next-line\n    }, [message]);\n\n    if(projects.length === 0 ) return <p>No tienes proyectos. Comienza creando uno.</p>;\n\n    return ( \n        <ul className=\"listado-proyectos\">\n            {alert ? (\n                <div className={`alerta ${alert.category}`}>{alert.msg}</div>\n            ) : null }\n            <TransitionGroup>            \n                {projects.map(project => (\n                    <CSSTransition\n                        key={project._id}\n                        timeout={200}\n                        classNames=\"proyecto\"\n                    >\n                        <Project\n                            \n                            project={project}\n                    /> \n                    </CSSTransition>\n                ))}\n            </TransitionGroup>    \n        </ul>\n\n     );\n}\n \nexport default ListProjects;","import React from 'react';\nimport FrmProject from '../projects/FrmProject';\nimport ListProjects from '../projects/ListProjects';\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>MERN<span>Tasks</span></h1>\n            <FrmProject />\n\n            <div className=\"proyectos\">\n                <h2>Mis Proyectos</h2>\n                <ListProjects />\n            </div>\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React, { useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Header = () => {\n    \n    const authContext = useContext(AuthContext);\n    const { user, getLoggedUserFn, logOutFn } = authContext;\n    \n    useEffect(() => {\n        getLoggedUserFn();\n        // eslint-disable-next-line\n    }, []); \n\n    return ( \n        <header className=\"app-header\">\n            {user ? <p className=\"nombre-usuario\">Hola <span>{user.name}</span></p> : null }\n            \n            <nav className=\"nav-principal\">\n                <button\n                    className=\"btn btn-blank cerrar-sesion\"\n                    onClick={() => logOutFn()}\n                >Cerrar Sesión</button>\n            </nav>\n        </header>\n     );\n}\n \nexport default Header;","import React, { useContext, useState, useEffect } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\nconst FrmTask = () => {\n\n    const projectsContext = useContext(projectContext);\n    const tasksContext = useContext(taskContext);\n\n    const { project } = projectsContext;\n    const { errorTask, currentTask,\n        addTaskFn, updateTaskFn, showTaskErrorFn, getProjectTasksFn, cleanCurrentTaskFn } = tasksContext;\n\n    //State local del formulario\n    const [formData, setFormData] = useState({\n        name: ''\n    })\n    const { name } = formData;\n\n    useEffect(() => {\n        if(currentTask !== null){\n            setFormData(currentTask)\n        }else{\n            setFormData({\n                name: ''\n            })\n        }\n\n    }, [currentTask])\n\n    if(!project) return null;\n    const [currentProject] = project;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        //Validacion\n        if(name.trim() === ''){\n            showTaskErrorFn();\n            return;\n        }        \n\n        \n        if(currentTask === null) {\n            //Agregar la nueva tarea al State de Tareas\n            formData.project = currentProject._id;\n            formData.status = false;\n            addTaskFn(formData);\n        }else{\n            updateTaskFn(formData);\n            cleanCurrentTaskFn();\n        }\n        \n\n        //Obtener nuevamente el listado de tareas\n        getProjectTasksFn(currentProject.id);\n\n        //Reiniciar el formulario\n        setFormData({\n            name: ''\n        })\n\n    }\n\n    const handleChange = e => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={handleSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input \n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"El nombre de tu tarea aquí\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={currentTask ? 'Editar Tarea' : 'Agregar Tarea'}\n                    />\n                </div>\n            </form>\n            {errorTask ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\n        </div>\n     );\n}\n \nexport default FrmTask;","import React, { useContext } from 'react';\n\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from  '../../context/tasks/taskContext';\n\nconst Task = ({task}) => {\n\n    const projectsContext = useContext(projectContext);\n    const { project } = projectsContext;\n\n    const [ currentProject ] = project;\n\n    const tasksContext = useContext(taskContext);\n    const { getProjectTasksFn, deleteTaskFn, updateTaskFn, setCurrentTaskFn } = tasksContext;\n    \n    const { name, completed } = task;   \n\n    const deleteTask = taskId => {\n        deleteTaskFn(taskId, currentProject._id);\n        getProjectTasksFn(currentProject.id);\n    }\n\n    const handleClickSelectTask = task => {\n        setCurrentTaskFn(task)\n    }\n\n    const handleClickChangeStatus = task => {\n        if(task.completed){\n            task.completed = false;\n        }else{\n            task.completed = true;            \n        }\n        updateTaskFn(task);\n    }\n\n    return ( \n\n       <li className=\"tarea sombra\">\n            <p>{name}</p>\n\n            <div className=\"estado\">\n                {completed\n                ? (\n                    <button\n                        type=\"button\"\n                        className=\"completo\"\n                        onClick={() => handleClickChangeStatus(task)}\n                    >Completa</button>\n                    )\n                :   (\n                    <button\n                        type=\"button\"\n                        className=\"incompleto\"\n                        onClick={() => handleClickChangeStatus(task)}\n                    >Incompleta</button>\n                    )\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => handleClickSelectTask(task)}\n                >Editar</button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => deleteTask(task._id)}\n                >Eliminar</button>               \n            </div>\n        </li>\n     );\n}\n \nexport default Task;","import React, { Fragment, useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Task from './Task';\nimport proyectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\nconst ListTasks = () => {\n\n    const proyectsContext = useContext(proyectContext);\n    const tasksContext = useContext(taskContext);\n    \n    const { project, deleteProjectFn } = proyectsContext;\n    const { projectTasks } = tasksContext;\n\n    if(!project) return <h2>Selecciona un proyecto</h2>;\n    const [currentProject] = project;\n\n    const handleClick = () => {\n        deleteProjectFn(currentProject._id);\n    }\n\n    return ( \n        <Fragment>\n            <h2>Proyecto: {currentProject.name}</h2>\n            <ul className=\"listado-tareas\">\n                {projectTasks.length === 0\n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\n                    : \n                    <TransitionGroup>\n                        {projectTasks.map(task => (\n                        <CSSTransition\n                            key={task.id}\n                            timeout={200}\n                            classNames=\"tarea\"\n                        >\n                            <Task \n                                key={task.id}\n                                task={task}\n                            />\n                        </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                    \n                }\n            </ul>\n\n            <button \n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={handleClick}\n            >Eliminar Proyecto &times;</button>\n            \n        </Fragment>\n     );\n}\n \nexport default ListTasks;","import React, { useContext } from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Header from '../layout/Header';\nimport FrmTask from '../tasks/FrmTask';\nimport ListTasks from '../tasks/ListTasks';\nimport AuthContext from '../../context/auth/authContext';\nimport { useEffect } from 'react';\n\nconst Projects = () => {\n\n    const authContext = useContext(AuthContext);\n    const { getLoggedUserFn } = authContext;\n    \n    useEffect(() => {\n        getLoggedUserFn();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <div className=\"contenedor-app\">\n            <Sidebar />\n            <div className=\"seccion-principal\">\n                <Header />\n                <main>\n                    <FrmTask />\n                    <div className=\"contenedor-tareas\">\n                        <ListTasks />\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n}\n \nexport default Projects;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport ProjectState from './context/projects/ProjectState';\nimport TaskState from './context/tasks/taskState';\nimport AlertState from './context/alert/alertState';\nimport AuthState from './context/auth/authState';\nimport PrivateRoute from './components/routes/PrivateRoute';\n\nimport Login from './components/auth/Login';\nimport SignUp from './components/auth/SignUp';\nimport Projects from './components/projects/Projects';\n\nimport tokenAuth from './config/token';\n\n// Revisar si hay un token de usuario\nconst token = localStorage.getItem('mern_projects_token');\nif(token){\n  tokenAuth(token);\n}\n\nfunction App() {\n  return (\n    <ProjectState>\n      <TaskState>\n        <AlertState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/signup\" component={SignUp} />\n                <PrivateRoute exact path=\"/projects\" component={Projects} />\n              </Switch>\n            </Router>           \n          </AuthState>\n        </AlertState>\n      </TaskState>\n    </ProjectState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}